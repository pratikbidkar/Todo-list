{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\OneDrive\\\\Desktop\\\\Projects\\\\django-react-app-Task_Manager-master\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios //Axios to send and receive HTTP requests\n      .get(\"http://localhost:8000/api/tasks/\").then(res => this.setState({\n        taskList: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-5 tab-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayCompleted(true),\n          className: this.state.viewCompleted ? \"active\" : \"\",\n          children: \"completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayCompleted(false),\n          className: this.state.viewCompleted ? \"\" : \"active\",\n          children: \"Incompleted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.taskList.filter(item => item.completed === viewCompleted);\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`,\n          title: item.description,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.editItem(item),\n            className: \"btn btn-secondary mr-2\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDelete(item),\n            className: \"btn btn-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this));\n    };\n\n    this.toggle = () => {\n      //add this after modal creation\n      this.setState({\n        modal: !this.state.modal\n      }); //add this after modal creation\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n\n      if (item.id) {\n        // if old post to edit and submit\n        axios.put(`http://localhost:8000/api/tasks/${item.id}/`, item).then(res => this.refreshList());\n        return;\n      } // if new post to submit\n\n\n      axios.post(\"http://localhost:8000/api/tasks/\", item).then(res => this.refreshList());\n    };\n\n    this.handleDelete = item => {\n      axios.delete(`http://localhost:8000/api/tasks/${item.id}/`).then(res => this.refreshList());\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: \"\",\n        description: \"\",\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      taskList: []\n    };\n  } // Add componentDidMount()\n\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  // -I- Start by visual effects to viewer\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-black text-uppercase text-center my-4\",\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.createItem,\n                className: \"btn btn-primary\",\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), this.renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(Modal, {\n        activeItem: this.state.activeItem,\n        toggle: this.toggle,\n        onSave: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Pratik/OneDrive/Desktop/Projects/django-react-app-Task_Manager-master/frontend/src/App.js"],"names":["React","Component","Modal","axios","App","constructor","props","refreshList","get","then","res","setState","taskList","data","catch","err","console","log","displayCompleted","status","viewCompleted","renderTabList","state","renderItems","newItems","filter","item","completed","map","description","title","editItem","handleDelete","id","toggle","modal","handleSubmit","put","post","delete","createItem","activeItem","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from 'axios';  \n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      taskList: []\n    };\n  }\n\n  // Add componentDidMount()\n  componentDidMount() {\n    this.refreshList();\n  }\n\n \n  refreshList = () => {\n    axios   //Axios to send and receive HTTP requests\n      .get(\"http://localhost:8000/api/tasks/\")\n      .then(res => this.setState({ taskList: res.data }))\n      .catch(err => console.log(err));\n  };\n\n\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n\n\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          completed\n            </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incompleted\n            </span>\n      </div>\n    );\n  };\n\n  // Main variable to render items on the screen\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.taskList.filter(\n      item => item.completed === viewCompleted\n    );\n    return newItems.map(item => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"\n            }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            onClick={() => this.editItem(item)}\n            className=\"btn btn-secondary mr-2\"\n          >\n            Edit\n          </button>\n          <button\n            onClick={() => this.handleDelete(item)}\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </span>\n      </li>\n    ));\n  };\n  // ///////////////////////////////////////////////////////////\n\n  ////add this after modal creation\n  toggle = () => {//add this after modal creation\n    this.setState({ modal: !this.state.modal });//add this after modal creation\n  };\n  // handleSubmit = item => {//add this after modal creation\n  //   this.toggle();//add this after modal creation\n  //   alert(\"save\" + JSON.stringify(item));//add this after modal creation\n  // };\n\n  // Submit an item\n  handleSubmit = item => {\n    this.toggle();\n    if (item.id) {\n      // if old post to edit and submit\n      axios\n        .put(`http://localhost:8000/api/tasks/${item.id}/`, item)\n        .then(res => this.refreshList());\n      return;\n    }\n    // if new post to submit\n    axios\n      .post(\"http://localhost:8000/api/tasks/\", item)\n      .then(res => this.refreshList());\n  };\n\n  // Delete item\n  handleDelete = item => {\n    axios\n      .delete(`http://localhost:8000/api/tasks/${item.id}/`)\n      .then(res => this.refreshList());\n  };\n  // handleDelete = item => {//add this after modal creation\n  //   alert(\"delete\" + JSON.stringify(item));//add this after modal creation\n  // };\n\n  // Create item\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n\n  //Edit item\n  editItem = item => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n\n\n  // -I- Start by visual effects to viewer\n  render() {\n    return (\n      <main className=\"content\">\n        <h1 className=\"text-black text-uppercase text-center my-4\">Task Manager</h1>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button onClick={this.createItem} className=\"btn btn-primary\">\n                  Add task\n                    </button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          />\n        ) : null}\n      </main>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}